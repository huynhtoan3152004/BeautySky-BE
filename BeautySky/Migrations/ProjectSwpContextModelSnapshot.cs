// <auto-generated />
using System;
using BeautySky.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BeautySky.Migrations
{
    [DbContext(typeof(ProjectSwpContext))]
    partial class ProjectSwpContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BeautySky.Models.Answer", b =>
                {
                    b.Property<int>("AnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AnswerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AnswerId"));

                    b.Property<string>("AnswerText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsCorrect")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.HasKey("AnswerId")
                        .HasName("PK__Answer__D4825024A451990E");

                    b.HasIndex("QuestionId");

                    b.ToTable("Answer", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Blog", b =>
                {
                    b.Property<int>("BlogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("BlogID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BlogId"));

                    b.Property<int?>("AuthorId")
                        .HasColumnType("int")
                        .HasColumnName("AuthorID");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreatedDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("BlogId")
                        .HasName("PK__Blog__54379E5011E53B0C");

                    b.HasIndex("AuthorId");

                    b.ToTable("Blog", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.CarePlan", b =>
                {
                    b.Property<int>("CarePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CarePlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CarePlanId"));

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PlanName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("SkinTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SkinTypeID");

                    b.HasKey("CarePlanId")
                        .HasName("PK__CarePlan__2EB4A29D55FC2839");

                    b.HasIndex("SkinTypeId");

                    b.ToTable("CarePlan", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.CarePlanProduct", b =>
                {
                    b.Property<int>("CarePlanId")
                        .HasColumnType("int")
                        .HasColumnName("CarePlanID");

                    b.Property<int>("StepId")
                        .HasColumnType("int")
                        .HasColumnName("StepID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<string>("ProductName")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CarePlanId", "StepId", "ProductId")
                        .HasName("PK__CarePlan__A043ED689140B3A4");

                    b.HasIndex("ProductId");

                    b.HasIndex("StepId");

                    b.ToTable("CarePlanProduct", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.CarePlanStep", b =>
                {
                    b.Property<int>("StepId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("StepID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StepId"));

                    b.Property<int?>("CarePlanId")
                        .HasColumnType("int")
                        .HasColumnName("CarePlanID");

                    b.Property<string>("StepDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("StepName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("StepOrder")
                        .HasColumnType("int");

                    b.HasKey("StepId")
                        .HasName("PK__CarePlan__2434333777ABFE84");

                    b.HasIndex("CarePlanId");

                    b.ToTable("CarePlanStep", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("CategoryId")
                        .HasName("PK__Category__19093A2B9F1502FC");

                    b.ToTable("Category", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("CreateDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<string>("ImageUrl")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ImageURL");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id")
                        .HasName("PK__News__3214EC279CD70D25");

                    b.ToTable("News");
                });

            modelBuilder.Entity("BeautySky.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<decimal?>("DiscountAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal?>("FinalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<DateTime?>("OrderDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("PaymentId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    b.Property<int?>("PromotionId")
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal?>("TotalAmount")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("OrderId")
                        .HasName("PK__Orders__C3905BAF673FFF54");

                    b.HasIndex("PaymentId");

                    b.HasIndex("PromotionId");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("BeautySky.Models.OrderProduct", b =>
                {
                    b.Property<int>("OrderId")
                        .HasColumnType("int")
                        .HasColumnName("OrderID");

                    b.Property<int>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("OrderId", "ProductId")
                        .HasName("PK__OrderPro__08D097C1EEF18E40");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderProduct", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Payment", b =>
                {
                    b.Property<int>("PaymentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentId"));

                    b.Property<DateTime?>("PaymentDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("PaymentStatusId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    b.Property<int?>("PaymentTypeId")
                        .HasColumnType("int")
                        .HasColumnName("PaymentTypeID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("PaymentId")
                        .HasName("PK__Payment__9B556A5806A5FF76");

                    b.HasIndex("PaymentStatusId");

                    b.HasIndex("PaymentTypeId");

                    b.HasIndex("UserId");

                    b.ToTable("Payment", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.PaymentStatus", b =>
                {
                    b.Property<int>("PaymentStatusId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentStatusID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentStatusId"));

                    b.Property<string>("PaymentStatus1")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("PaymentStatus");

                    b.HasKey("PaymentStatusId")
                        .HasName("PK__PaymentS__34F8AC1FA7A57A93");

                    b.ToTable("PaymentStatus", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.PaymentType", b =>
                {
                    b.Property<int>("PaymentTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PaymentTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PaymentTypeId"));

                    b.Property<string>("PaymentTypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("PaymentTypeId")
                        .HasName("PK__PaymentT__BA430B152F79E025");

                    b.ToTable("PaymentType", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int")
                        .HasColumnName("CategoryID");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Ingredient")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("ProductName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("SkinTypeId")
                        .HasColumnType("int")
                        .HasColumnName("SkinTypeID");

                    b.HasKey("ProductId")
                        .HasName("PK__Products__B40CC6ED2D194A83");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SkinTypeId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("BeautySky.Models.ProductsImage", b =>
                {
                    b.Property<int>("ProductsImageId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ProductsImageID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductsImageId"));

                    b.Property<string>("ImageDescription")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.HasKey("ProductsImageId")
                        .HasName("PK__Products__D92CC439B3F379CC");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductsImage", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Promotion", b =>
                {
                    b.Property<int>("PromotionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PromotionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PromotionId"));

                    b.Property<decimal>("DiscountPercentage")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("PromotionName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime");

                    b.HasKey("PromotionId")
                        .HasName("PK__Promotio__52C42F2F36A0D188");

                    b.ToTable("Promotions");
                });

            modelBuilder.Entity("BeautySky.Models.Question", b =>
                {
                    b.Property<int>("QuestionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuestionId"));

                    b.Property<int>("OrderNumber")
                        .HasColumnType("int");

                    b.Property<string>("QuestionText")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.HasKey("QuestionId")
                        .HasName("PK__Question__0DC06F8CA3347CD6");

                    b.HasIndex("QuizId");

                    b.ToTable("Question", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Quiz", b =>
                {
                    b.Property<int>("QuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("QuizId"));

                    b.Property<DateTime?>("DateCreated")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Description")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("QuizName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("QuizId")
                        .HasName("PK__Quiz__8B42AE6EA4D5340F");

                    b.ToTable("Quiz", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Review", b =>
                {
                    b.Property<int>("ReviewId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ReviewID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReviewId"));

                    b.Property<string>("Comment")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int?>("ProductId")
                        .HasColumnType("int")
                        .HasColumnName("ProductID");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReviewDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("ReviewId")
                        .HasName("PK__Review__74BC79AE0AB935EB");

                    b.HasIndex("ProductId");

                    b.HasIndex("UserId");

                    b.ToTable("Review", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Role", b =>
                {
                    b.Property<int>("RoleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RoleId"));

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("RoleId")
                        .HasName("PK__Role__8AFACE3A1A72AEDA");

                    b.ToTable("Role", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.SkinType", b =>
                {
                    b.Property<int>("SkinTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("SkinTypeID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SkinTypeId"));

                    b.Property<string>("SkinTypeName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("SkinTypeName");

                    b.HasKey("SkinTypeId")
                        .HasName("PK__SkinType__D5D2962B07F301E8");

                    b.ToTable("SkinType", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("ConfirmPassword")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<DateTime?>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool?>("IsActive")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(true);

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.Property<int?>("RoleId")
                        .HasColumnType("int")
                        .HasColumnName("RoleID");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .IsUnicode(false)
                        .HasColumnType("varchar(255)");

                    b.HasKey("UserId")
                        .HasName("PK__Users__1788CCAC0418CFE0");

                    b.HasIndex("RoleId");

                    b.HasIndex(new[] { "Email" }, "UQ__Users__A9D105340C8C3AAE")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BeautySky.Models.UserAnswer", b =>
                {
                    b.Property<int>("UserAnswerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserAnswerID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserAnswerId"));

                    b.Property<int?>("AnswerId")
                        .HasColumnType("int")
                        .HasColumnName("AnswerID");

                    b.Property<int?>("QuestionId")
                        .HasColumnType("int")
                        .HasColumnName("QuestionID");

                    b.Property<int?>("UserQuizId")
                        .HasColumnType("int")
                        .HasColumnName("UserQuizID");

                    b.HasKey("UserAnswerId")
                        .HasName("PK__UserAnsw__47CE235F78CE84D9");

                    b.HasIndex("AnswerId");

                    b.HasIndex("QuestionId");

                    b.HasIndex("UserQuizId");

                    b.ToTable("UserAnswer", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.UserCarePlan", b =>
                {
                    b.Property<int>("UserCarePlanId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserCarePlanID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserCarePlanId"));

                    b.Property<int?>("CarePlanId")
                        .HasColumnType("int")
                        .HasColumnName("CarePlanID");

                    b.Property<DateTime?>("DateCreate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserCarePlanId")
                        .HasName("PK__UserCare__9E6AF0B643DC846C");

                    b.HasIndex("CarePlanId");

                    b.HasIndex("UserId");

                    b.ToTable("UserCarePlan", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.UserQuiz", b =>
                {
                    b.Property<int>("UserQuizId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("UserQuizID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserQuizId"));

                    b.Property<DateTime?>("DateTaken")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("(getdate())");

                    b.Property<int?>("QuizId")
                        .HasColumnType("int")
                        .HasColumnName("QuizID");

                    b.Property<int?>("UserId")
                        .HasColumnType("int")
                        .HasColumnName("UserID");

                    b.HasKey("UserQuizId")
                        .HasName("PK__UserQuiz__20FA63A75DE9B0FA");

                    b.HasIndex("QuizId");

                    b.HasIndex("UserId");

                    b.ToTable("UserQuiz", (string)null);
                });

            modelBuilder.Entity("BeautySky.Models.Answer", b =>
                {
                    b.HasOne("BeautySky.Models.Question", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__Answer__Question__00200768");

                    b.Navigation("Question");
                });

            modelBuilder.Entity("BeautySky.Models.Blog", b =>
                {
                    b.HasOne("BeautySky.Models.User", "Author")
                        .WithMany("Blogs")
                        .HasForeignKey("AuthorId")
                        .HasConstraintName("FK__Blog__AuthorID__1DB06A4F");

                    b.Navigation("Author");
                });

            modelBuilder.Entity("BeautySky.Models.CarePlan", b =>
                {
                    b.HasOne("BeautySky.Models.SkinType", "SkinType")
                        .WithMany("CarePlans")
                        .HasForeignKey("SkinTypeId")
                        .HasConstraintName("FK__CarePlan__SkinTy__0C85DE4D");

                    b.Navigation("SkinType");
                });

            modelBuilder.Entity("BeautySky.Models.CarePlanProduct", b =>
                {
                    b.HasOne("BeautySky.Models.CarePlan", "CarePlan")
                        .WithMany("CarePlanProducts")
                        .HasForeignKey("CarePlanId")
                        .IsRequired()
                        .HasConstraintName("FK__CarePlanP__CareP__123EB7A3");

                    b.HasOne("BeautySky.Models.Product", "Product")
                        .WithMany("CarePlanProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__CarePlanP__Produ__14270015");

                    b.HasOne("BeautySky.Models.CarePlanStep", "Step")
                        .WithMany("CarePlanProducts")
                        .HasForeignKey("StepId")
                        .IsRequired()
                        .HasConstraintName("FK__CarePlanP__StepI__1332DBDC");

                    b.Navigation("CarePlan");

                    b.Navigation("Product");

                    b.Navigation("Step");
                });

            modelBuilder.Entity("BeautySky.Models.CarePlanStep", b =>
                {
                    b.HasOne("BeautySky.Models.CarePlan", "CarePlan")
                        .WithMany("CarePlanSteps")
                        .HasForeignKey("CarePlanId")
                        .HasConstraintName("FK__CarePlanS__CareP__0F624AF8");

                    b.Navigation("CarePlan");
                });

            modelBuilder.Entity("BeautySky.Models.Order", b =>
                {
                    b.HasOne("BeautySky.Models.Payment", "Payment")
                        .WithMany("Orders")
                        .HasForeignKey("PaymentId")
                        .HasConstraintName("FK__Orders__PaymentI__6B24EA82");

                    b.HasOne("BeautySky.Models.Promotion", "Promotion")
                        .WithMany("Orders")
                        .HasForeignKey("PromotionId")
                        .HasConstraintName("FK__Orders__Promotio__6A30C649");

                    b.HasOne("BeautySky.Models.User", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__UserID__693CA210");

                    b.Navigation("Payment");

                    b.Navigation("Promotion");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeautySky.Models.OrderProduct", b =>
                {
                    b.HasOne("BeautySky.Models.Order", "Order")
                        .WithMany("OrderProducts")
                        .HasForeignKey("OrderId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Order__6E01572D");

                    b.HasOne("BeautySky.Models.Product", "Product")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ProductId")
                        .IsRequired()
                        .HasConstraintName("FK__OrderProd__Produ__6EF57B66");

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeautySky.Models.Payment", b =>
                {
                    b.HasOne("BeautySky.Models.PaymentStatus", "PaymentStatus")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentStatusId")
                        .HasConstraintName("FK__Payment__Payment__656C112C");

                    b.HasOne("BeautySky.Models.PaymentType", "PaymentType")
                        .WithMany("Payments")
                        .HasForeignKey("PaymentTypeId")
                        .HasConstraintName("FK__Payment__Payment__6477ECF3");

                    b.HasOne("BeautySky.Models.User", "User")
                        .WithMany("Payments")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Payment__UserID__6383C8BA");

                    b.Navigation("PaymentStatus");

                    b.Navigation("PaymentType");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeautySky.Models.Product", b =>
                {
                    b.HasOne("BeautySky.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__Catego__5535A963");

                    b.HasOne("BeautySky.Models.SkinType", "SkinType")
                        .WithMany("Products")
                        .HasForeignKey("SkinTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Products__SkinTy__5629CD9C");

                    b.Navigation("Category");

                    b.Navigation("SkinType");
                });

            modelBuilder.Entity("BeautySky.Models.ProductsImage", b =>
                {
                    b.HasOne("BeautySky.Models.Product", "Product")
                        .WithMany("ProductsImages")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__ProductsI__Produ__59063A47");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("BeautySky.Models.Question", b =>
                {
                    b.HasOne("BeautySky.Models.Quiz", "Quiz")
                        .WithMany("Questions")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK__Question__QuizID__7C4F7684");

                    b.Navigation("Quiz");
                });

            modelBuilder.Entity("BeautySky.Models.Review", b =>
                {
                    b.HasOne("BeautySky.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Review__ProductI__75A278F5");

                    b.HasOne("BeautySky.Models.User", "User")
                        .WithMany("Reviews")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Review__UserID__76969D2E");

                    b.Navigation("Product");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeautySky.Models.User", b =>
                {
                    b.HasOne("BeautySky.Models.Role", "Role")
                        .WithMany("Users")
                        .HasForeignKey("RoleId")
                        .HasConstraintName("FK__Users__RoleID__4E88ABD4");

                    b.Navigation("Role");
                });

            modelBuilder.Entity("BeautySky.Models.UserAnswer", b =>
                {
                    b.HasOne("BeautySky.Models.Answer", "Answer")
                        .WithMany("UserAnswers")
                        .HasForeignKey("AnswerId")
                        .HasConstraintName("FK__UserAnswe__Answe__09A971A2");

                    b.HasOne("BeautySky.Models.Question", "Question")
                        .WithMany("UserAnswers")
                        .HasForeignKey("QuestionId")
                        .HasConstraintName("FK__UserAnswe__Quest__08B54D69");

                    b.HasOne("BeautySky.Models.UserQuiz", "UserQuiz")
                        .WithMany("UserAnswers")
                        .HasForeignKey("UserQuizId")
                        .HasConstraintName("FK__UserAnswe__UserQ__07C12930");

                    b.Navigation("Answer");

                    b.Navigation("Question");

                    b.Navigation("UserQuiz");
                });

            modelBuilder.Entity("BeautySky.Models.UserCarePlan", b =>
                {
                    b.HasOne("BeautySky.Models.CarePlan", "CarePlan")
                        .WithMany("UserCarePlans")
                        .HasForeignKey("CarePlanId")
                        .HasConstraintName("FK__UserCareP__CareP__18EBB532");

                    b.HasOne("BeautySky.Models.User", "User")
                        .WithMany("UserCarePlans")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserCareP__UserI__17F790F9");

                    b.Navigation("CarePlan");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeautySky.Models.UserQuiz", b =>
                {
                    b.HasOne("BeautySky.Models.Quiz", "Quiz")
                        .WithMany("UserQuizzes")
                        .HasForeignKey("QuizId")
                        .HasConstraintName("FK__UserQuiz__QuizID__04E4BC85");

                    b.HasOne("BeautySky.Models.User", "User")
                        .WithMany("UserQuizzes")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__UserQuiz__UserID__03F0984C");

                    b.Navigation("Quiz");

                    b.Navigation("User");
                });

            modelBuilder.Entity("BeautySky.Models.Answer", b =>
                {
                    b.Navigation("UserAnswers");
                });

            modelBuilder.Entity("BeautySky.Models.CarePlan", b =>
                {
                    b.Navigation("CarePlanProducts");

                    b.Navigation("CarePlanSteps");

                    b.Navigation("UserCarePlans");
                });

            modelBuilder.Entity("BeautySky.Models.CarePlanStep", b =>
                {
                    b.Navigation("CarePlanProducts");
                });

            modelBuilder.Entity("BeautySky.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("BeautySky.Models.Order", b =>
                {
                    b.Navigation("OrderProducts");
                });

            modelBuilder.Entity("BeautySky.Models.Payment", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeautySky.Models.PaymentStatus", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("BeautySky.Models.PaymentType", b =>
                {
                    b.Navigation("Payments");
                });

            modelBuilder.Entity("BeautySky.Models.Product", b =>
                {
                    b.Navigation("CarePlanProducts");

                    b.Navigation("OrderProducts");

                    b.Navigation("ProductsImages");

                    b.Navigation("Reviews");
                });

            modelBuilder.Entity("BeautySky.Models.Promotion", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("BeautySky.Models.Question", b =>
                {
                    b.Navigation("Answers");

                    b.Navigation("UserAnswers");
                });

            modelBuilder.Entity("BeautySky.Models.Quiz", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("UserQuizzes");
                });

            modelBuilder.Entity("BeautySky.Models.Role", b =>
                {
                    b.Navigation("Users");
                });

            modelBuilder.Entity("BeautySky.Models.SkinType", b =>
                {
                    b.Navigation("CarePlans");

                    b.Navigation("Products");
                });

            modelBuilder.Entity("BeautySky.Models.User", b =>
                {
                    b.Navigation("Blogs");

                    b.Navigation("Orders");

                    b.Navigation("Payments");

                    b.Navigation("Reviews");

                    b.Navigation("UserCarePlans");

                    b.Navigation("UserQuizzes");
                });

            modelBuilder.Entity("BeautySky.Models.UserQuiz", b =>
                {
                    b.Navigation("UserAnswers");
                });
#pragma warning restore 612, 618
        }
    }
}
